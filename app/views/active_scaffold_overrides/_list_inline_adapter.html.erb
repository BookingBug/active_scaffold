<%
   column_count ||= begin
     config = if nested? and (nested.singular_association? || action_name == 'index')
                active_scaffold_config_for(nested.parent_model)
              else
                active_scaffold_config
              end
     # increment in 1 for self-associations, parent_model config will have constraints too
     if config
       # add 1 for action column
       config.list.columns.count + 1
     else
       1 + (config == active_scaffold_config && action_name == 'index' ? 1 : 0)
     end
   end
%>
<%# nested_id, allows us to remove a nested scaffold programmatically %>
<tr class="inline-adapter" id="<%= element_row_id :action => :nested %>">
  <td class="inline-adapter-cell">
<% if successful? %>
    <div class="<%= "#{params[:action]}-view" if params[:action] %> <%= "#{nested? ? nested.name : id_from_controller(params[:controller])}-view" %> view">
      <%= link_to(as_(:close), '', :class => 'inline-adapter-close as_cancel', :remote => true, :title => as_(:close)) -%>
      <%= payload -%>
    </div>
<% end %>
    <%= javascript_tag("setTimeout(function() { var action_link = ActiveScaffold.ActionLink.get('#{element_row_id(:action => :nested)}'); if (action_link) { action_link.update_flash_messages('#{escape_javascript(render(:partial => 'messages').strip)}');#{' action_link.close(); ActiveScaffold.scroll_to(action_link.scaffold(), ActiveScaffold.config.scroll_on_close == "checkInViewport");' unless successful?} } }, 10);") %>
  </td>
</tr>
